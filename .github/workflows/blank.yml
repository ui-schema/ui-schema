name: UI-Schema CI

env:
    DOCKER_BUILDKIT: 1

on:
    push:
        branches: [ master, develop, feature/develop-0.5.0, feature/develop-0.5.0-r2 ]
    pull_request:
        branches: [ master, develop, feature/develop-0.5.0, feature/develop-0.5.0-r2 ]
    #    create:
    #        tags:
    #            - '[0-9]+.[0-9]+.[0-9]+*'

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    build_node:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [ 24 ]
        steps:
            -   uses: actions/checkout@v4
            -   name: Set Branch
                id: vars
                run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}
            -   name: Use Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v4
                with:
                    node-version: ${{ matrix.node-version }}
                    registry-url: 'https://registry.npmjs.org'

            -   name: Cache CI node_modules
                uses: actions/cache@v4
                env:
                    cache-name: cache-node-modules
                with:
                    # npm cache files are stored in `~/.npm` on Linux/macOS
                    path: ~/.npm
                    key: ${{ runner.os }}-build-${{ env.cache-name }}

            -   name: Setup packages
                run: |
                    npm ci --legacy-peer-deps
                    #npm ci --force
                    #npm run bootstrap
                    #npm run link

            -   name: Run linter
                run: |
                    npm run lint

            -   name: Run TS checks # for non-packages, as these are checked during dtsgen in build
                run: |
                    npm run tscheck

            -   name: Run tests
                run: |
                    npm run test

            #-   name: Run checks
            #    run: |
            #        # includes lint, ts-checks for non-packages (as checked during dtsgen), tests
            #        npm run check

            -   name: Build
                run: |
                    npm run build

            -   name: Check Resolver # this check uses the build assets, not source code
                run: |
                    npm run check-resolver

            -   name: Send code coverage report to Codecov.io
                uses: codecov/codecov-action@v4
                with:
                    token: ${{ secrets.CODECOV_TOKEN }}

            -   name: Publish to NPM
                if: github.ref == 'refs/heads/master'
                #if: startsWith(github.ref, 'refs/tags/')
                run: |
                    ./publish.sh
                env:
                    NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
